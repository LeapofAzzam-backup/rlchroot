#!/data/data/com.termux/files/usr/bin/bash
### rlc-export - exports the containers into tarball used for publishing images
### All Rights Reserved @wmcbtech30 (2021)
RLCHROOT_ROOTFS_DIR="$PREFIX/var/rlc/containers"
GETPWD="$(pwd)"
CHROOT_NAME="$1"
OUTPUT="$2"

### Colored Environment Variables
RED="$(tput setaf 1)$(tput bold)"
GREEN="$(tput setaf 2)$(tput bold)"
YELLOW="$(tput setaf 3)$(tput bold)"
NOATTR="$(tput sgr0)"

sigtrap(){
echo "${RED}Signal Recieved! Exiting as Requested...${NOATTR}"
exit 2
}

trap 'sigtrap' HUP INT KILL QUIT TERM

### Check if running as root
if [ "$(whoami)" == "root" ]; then
	echo "${RED}Running ${YELLOW}rlc-export${RED} as root is discouraged, Aborting Exit Code 2${NOATTR}"
	exit 2
fi

### Check if no argument is specified
if [ $# = 0 ] || [ $0 == "--help" ]; then
	echo "${GREEN}rlc-export: Exports Containers into gzip tarball"
	echo ""
	echo "Usage: "
	echo "${YELLOW}rlc-export [CHROOT-NAME] [OUTPUT]"
	echo ""
	echo "${GREEN}Example Usage: "
	echo "${YELLOW}rlc-export kali-rootfs kali-snapshot-arm64.tar.gz"
	echo "rlc-export ubuntu-focal focal-backup.dump"
	echo ""
	echo "${GREEN}NOTE: Since the Termux Home and Guest home are synced"
	echo "Only the guest home will be exported and not the Termux Home so be aware of that you may lose customizations when you reset Termux${NOATTR}"
	exit 2
fi

### Check if the CWD is Writable
if [ ! -w "$GETPWD" ]; then
	echo "${RED}The Directory ${YELLOW}$GETPWD${RED} is unwritable${NOATTR}"
	exit 2
fi

### Explicitly Check for Zero String for Argument
if [ -z "$CHROOT_NAME" ]; then
	echo "${RED}Please Specify a Container Name to Export${NOATTR}"
	exit 2
fi

### Check if the Container Exists
if [ ! -e "$RLCHROOT_ROOTFS_DIR/$CHROOT_NAME" ]; then
	echo "${RED}The Requested Container ${YELLOW}$CHROOT_NAME${RED} isn't installed${NOATTR}"
	exit 2
fi

### Explicitly Check for Zero String for Argument
if [ -z "$OUTPUT" ]; then
    echo "${RED}Please Specify the Output of your tarball${NOATTR}"
    exit 2
fi

### Go To the Container dir to avoid adding subdirectory
cd "$RLCHROOT_ROOTFS_DIR"

### Backup the Container
echo "${YELLOW}Backing Up $RLCHROOT_ROOTFS_DIR/$CHROOT_NAME...${NOATTR}"
proot --link2symlink -0 tar --preserve-permissions -zcf "$GETPWD/$OUTPUT" "$CHROOT_NAME" >/dev/null 2>&1 ||:
echo "${GREEN}The container successfully exported!${NOATTR}"; exit 0

### END OF MESSAGE EOM

